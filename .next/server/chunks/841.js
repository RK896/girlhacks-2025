"use strict";exports.id=841,exports.ids=[841],exports.modules={7547:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(1185),s=r.n(n);let o=process.env.MONGODB_URI;if(!o)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let a=global.mongoose;async function connectDB(){if(a.conn)return a.conn;a.promise||(a.promise=s().connect(o,{bufferCommands:!1}).then(e=>e));try{a.conn=await a.promise}catch(e){throw a.promise=null,e}return a.conn}a||(a=global.mongoose={conn:null,promise:null});let i=connectDB},2017:(e,t,r)=>{r.d(t,{Z:()=>l});var n=r(1185),s=r.n(n),o=r(2421),a=r.n(o);let i=new(s()).Schema({email:{type:String,required:[!0,"Email is required"],unique:!0,lowercase:!0,trim:!0},password:{type:String,required:[!0,"Password is required"],minlength:[6,"Password must be at least 6 characters"]},name:{type:String,required:[!0,"Name is required"],trim:!0},createdAt:{type:Date,default:Date.now},lastLogin:{type:Date,default:Date.now}});i.pre("save",async function(e){if(!this.isModified("password"))return e();try{let t=await a().genSalt(12);this.password=await a().hash(this.password,t),e()}catch(t){e(t)}}),i.methods.comparePassword=async function(e){return a().compare(e,this.password)},i.methods.toJSON=function(){let e=this.toObject();return delete e.password,e};let l=s().models.User||s().model("User",i)}};